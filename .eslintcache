[{"D:\\ANGEL\\git\\wa\\src\\Component\\Post.js":"1","D:\\ANGEL\\git\\wa\\src\\App.js":"2","D:\\ANGEL\\git\\wa\\src\\Component\\PostList.js":"3","D:\\ANGEL\\git\\wa\\src\\Component\\Add.js":"4","D:\\ANGEL\\git\\wa\\src\\Component\\Addcomment.js":"5","D:\\ANGEL\\git\\wa\\src\\Component\\FriendsList.js":"6","D:\\ANGEL\\git\\wa\\src\\Component\\UserInList.js":"7","D:\\ANGEL\\git\\wa\\src\\index.js":"8","D:\\ANGEL\\git\\wa\\src\\Component\\CommentList.js":"9","D:\\ANGEL\\git\\wa\\src\\Component\\Menu.js":"10","D:\\ANGEL\\git\\wa\\src\\Component\\ProfileHeader.js":"11","D:\\ANGEL\\git\\wa\\src\\Component\\Login.js":"12"},{"size":4201,"mtime":1609661038423,"results":"13","hashOfConfig":"14"},{"size":13310,"mtime":1609514905165,"results":"15","hashOfConfig":"14"},{"size":884,"mtime":1609397241392,"results":"16","hashOfConfig":"14"},{"size":1477,"mtime":1609659076931,"results":"17","hashOfConfig":"14"},{"size":723,"mtime":1607066920061,"results":"18","hashOfConfig":"14"},{"size":296,"mtime":1607152505967,"results":"19","hashOfConfig":"14"},{"size":2117,"mtime":1607063423050,"results":"20","hashOfConfig":"14"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"14"},{"size":445,"mtime":1607068727313,"results":"22","hashOfConfig":"14"},{"size":1900,"mtime":1607153738025,"results":"23","hashOfConfig":"14"},{"size":2557,"mtime":1609340135673,"results":"24","hashOfConfig":"14"},{"size":6739,"mtime":1609338013967,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14x9kzr",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ANGEL\\git\\wa\\src\\Component\\Post.js",[],"D:\\ANGEL\\git\\wa\\src\\App.js",["53"],"import React, { Component } from \"react\";\nimport Signup from \"./Component/Signup.js\";\nimport Login from \"./Component/Login.js\";\nimport UploadDP from \"./Component/UploadDP.js\";\nimport PostList from \"./Component/PostList.js\";\nimport Add from \"./Component/Add.js\";\nimport Addcomment from \"./Component/Addcomment.js\";\nimport CommentList from \"./Component/CommentList.js\";\nimport Menu from \"./Component/Menu.js\";\nimport Search from \"./Component/Search.js\";\nimport ProfileHeader from \"./Component/ProfileHeader.js\";\nimport Store from \"./Component/Store.js\";\nimport Settings from \"./Component/Settings.js\";\nimport UsersList from \"./Component/UsersList.js\";\nimport FriendsList from \"./Component/FriendsList.js\";\nimport $ from \"jquery\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      route: \"home\",\n      user: {\n        name: \"\",\n        profileImg: \"https://developedbyangel.github.io/SAS/logo.PNG\",\n      },\n      postList: [],\n      users: [],\n      viewProfile: {\n        name: \"\",\n        profileImg: \"https://developedbyangel.github.io/SAS/logo.PNG\",\n      },\n      post: {},\n    };\n    this.prevState = {};\n  }\n  onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n  login = (id, password) => {\n    console.log(\"log\");\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: id,\n        password: password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        if (r.error) {\n          alert(r.error);\n        } else {\n          console.log(r);\n          this.setState({ user: r.user });\n          this.setState({ postList: r.post });\n          this.RouteChange(\"profile\");\n        }\n      });\n  };\n  signup = (id, email, password) => {\n    console.log(\"log\");\n    fetch(\"http://localhost:3000/signup\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: id,\n        email: email,\n        password: password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        this.setState({ user: r.user });\n        this.setState({ postList: r.post });\n        this.RouteChange(\"uploadDP\");\n      })\n      .catch((err) => alert(err.message));\n  };\n  hashtags = (hashtag) => {\n    fetch(\"http://localhost:3000/hashtags/\" + hashtag, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        this.setState({ postList: r });\n        this.RouteChange(\"feed\");\n      })\n      .catch((err) => alert(err.message));\n  };\n  request = (requestName) => {\n    console.log(requestName);\n    fetch(\"http://localhost:3000/request\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userID: this.state.user._id,\n        userName: this.state.user.id,\n        requestName: requestName,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        var state = this.state.user;\n        state.pending.push(requestName);\n        this.setState({ user: state });\n        $(\".status\" + requestName).text(\"Request Pending\");\n        console.log(r);\n        return r;\n      })\n      .catch((err) => alert(err.message));\n  };\n  acceptRequest = (requestName) => {\n    console.log(requestName);\n    fetch(\"http://localhost:3000/acceptRequest\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userID: this.state.user._id,\n        userName: this.state.user.id,\n        requestName: requestName,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        var state = this.state.user;\n        state.pending.splice(state.request.indexOf(requestName), 1);\n        state.friends.push(requestName);\n        this.setState({ user: state });\n        console.log(r);\n        $(\".status\" + requestName).text(\"Unfriend\");\n        return r;\n      })\n      .catch((err) => alert(err.message));\n  };\n  cancelRequest = (requestName) => {\n    console.log(\"ok\", requestName);\n    fetch(\"http://localhost:3000/cancelRequest\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userID: this.state.user._id,\n        userName: this.state.user.id,\n        requestName: requestName,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        var state = this.state.user;\n        state.pending.splice(state.pending.indexOf(requestName), 1);\n        this.setState({ user: state });\n        console.log(r);\n        $(\".status\" + requestName).text(\"Request\");\n        return r;\n      })\n      .catch((err) => alert(err.message));\n  };\n  Unfriend = (friendName) => {\n    console.log(friendName);\n    fetch(\"http://localhost:3000/Unfriend\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userID: this.state.user._id,\n        userName: this.state.user.id,\n        friendName: friendName,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        var state = this.state.user;\n        state.friends.splice(state.pending.indexOf(friendName), 1);\n        this.setState({ user: state });\n        console.log(r);\n        $(\".status\" + friendName).text(\"Request\");\n        return r;\n      })\n      .catch((err) => alert(err.message));\n  };\n  feeds = () => {\n    console.log(\"feed\", this.state.user);\n    fetch(\"http://localhost:3000/feeds/\" + this.state.user._id, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        console.log(r);\n        this.setState({ postList: r });\n      })\n      .catch((err) => alert(err.message));\n  };\n  like = (postID) => {\n    fetch(\"http://localhost:3000/like\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        postID: postID,\n        userID: this.state.user.id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        if (r) console.log(\"liked\");\n      })\n      .catch((err) => alert(err.message));\n  };\n  share = (postID) => {\n    fetch(\"http://localhost:3000/share\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        postID: postID,\n        userID: this.state.user.id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        if (r) console.log(\"share\");\n      })\n      .catch((err) => alert(err.message));\n  };\n  comment = (cmt) => {\n    fetch(\"http://localhost:3000/comment\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        postID: this.state.post._id,\n        userID: this.state.user.id,\n        cmt: cmt,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        if (r) {\n          console.log(r);\n          var postList = this.state.postList;\n          postList.map((post) => {\n            var p = post;\n            if (post._id === this.state.post._id) {\n              p.comments.push(r);\n            }\n            return p;\n          });\n          this.setState({ postList: postList });\n          $(\".input-comment\").val(\"\");\n        }\n      })\n      .catch((err) => alert(err.message));\n  };\n  reply = (cmtID, reply) => {\n    fetch(\"http://localhost:3000/reply\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        postID: this.state.post._id,\n        userID: this.state.user.id,\n        cmtID: cmtID,\n        reply: reply,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        if (r) {\n          console.log(r);\n          var post = this.state.post;\n          post.comments.map((c) => {\n            var p = c;\n            if (c._id === cmtID) {\n              p.replies.push(r);\n            }\n            return p;\n          });\n          this.setState({ post: post });\n          $(\".input-reply\").val(\"\");\n        }\n      })\n      .catch((err) => alert(err.message));\n  };\n  likeComment = (cmtID) => {\n    fetch(\"http://localhost:3000/likeComment\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        postID: this.state.post._id,\n        cmtID: cmtID,\n        userID: this.state.user.id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        if (r) console.log(r);\n      })\n      .catch((err) => alert(err.message));\n  };\n  RouteChange = (route) => {\n    this.prevState = this.state;\n    console.log(\"routing to \" + route);\n    this.setState({ route: route });\n  };\n  search = (e, q) => {\n    e.preventDefault();\n    if (q[0] === \"#\") {\n      this.hashtags(q.slice(1));\n    } else {\n      console.log(q);\n      fetch(\"http://localhost:3000/search/\" + q, {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((res) => res.json())\n        .then((r) => {\n          if (r) {\n            console.log(r);\n            this.setState({ users: r });\n            this.RouteChange(\"usersList\");\n            $(\".search-field\").val(\"\");\n          }\n        })\n        .catch((err) => alert(err.message));\n    }\n  };\n  viewProfile(user) {\n    console.log(\"going to view profile\");\n    fetch(\"http://localhost:3000/getUser\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: user,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        if (r) {\n          console.log(r.user);\n          this.setState({ viewProfile: r.user });\n          this.setState({ postList: r.post });\n          this.RouteChange(\"viewProfile\");\n        }\n      })\n      .catch((err) => alert(err.message));\n  }\n  getUser = () => {\n    console.log(\"going to view your profile\");\n    fetch(\"http://localhost:3000/getUser\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        id: this.state.user.id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((r) => {\n        if (r) {\n          console.log(r.user);\n          this.setState({ postList: r.post });\n          this.RouteChange(\"profile\");\n        }\n      })\n      .catch((err) => alert(err.message));\n  };\n  updateuser(user) {\n    this.setState({ user: user });\n  }\n  updateUsers(users) {\n    console.log(users);\n    this.setState({ users: users });\n  }\n  updatePost(post) {\n    console.log(post);\n    this.setState({ post: post });\n    console.log(this.state);\n  }\n  back() {\n    console.log(this.prevState);\n    this.setState(this.prevState);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div\n          className=\"back\"\n          onClick={() => this.back()}\n          style={{\n            width: \"10px\",\n            height: \"10px\",\n            backgroundColor: \"red\",\n            position: \"fixed\",\n          }}\n        ></div>\n        {this.state.route === \"home\" ? (\n          <Login fun={this} />\n        ) : this.state.route === \"uploadDP\" ? (\n          <UploadDP fun={this} />\n        ) : (\n          <div>\n            <Search search={this.search} profileImg={this.state.user.path} />\n            <Menu route={this.RouteChange} fun={this} />\n            {this.state.route === \"viewProfile\" ? (\n              <div>\n                <ProfileHeader user={this.state.viewProfile} fun={this} />\n                <div className=\"PostList\">\n                  <PostList\n                    postList={this.state.postList}\n                    user={this.state.viewProfile}\n                    fun={this}\n                  />\n                </div>\n              </div>\n            ) : this.state.route === \"comment\" ? (\n              <div className=\"comment\">\n                <Addcomment fun={this} />\n                <CommentList fun={this} comments={this.state.post.comments} />\n              </div>\n            ) : this.state.route === \"friends\" ? (\n              <FriendsList users={this.state.users} />\n            ) : this.state.route === \"usersList\" ? (\n              <UsersList\n                userID={this.state.user.id}\n                users={this.state.users}\n                fun={this}\n              />\n            ) : this.state.route === \"feed\" ? (\n              <div className=\"PostList\">\n                <PostList\n                  postList={this.state.postList}\n                  user={this.state.user}\n                  fun={this}\n                />\n              </div>\n            ) : this.state.route === \"profile\" ? (\n              <div>\n                <ProfileHeader user={this.state.user} fun={this} />\n                <div className=\"PostList\">\n                  <PostList\n                    postList={this.state.postList}\n                    user={this.state.user}\n                    fun={this}\n                  />\n                </div>\n              </div>\n            ) : this.state.route === \"settings\" ? (\n              <Settings />\n            ) : (\n              <Store />\n            )}\n            <Add fun={this} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n",["54","55"],"D:\\ANGEL\\git\\wa\\src\\Component\\PostList.js",[],["56","57"],"D:\\ANGEL\\git\\wa\\src\\Component\\Add.js",["58"],"D:\\ANGEL\\git\\wa\\src\\Component\\Addcomment.js",["59"],"D:\\ANGEL\\git\\wa\\src\\Component\\FriendsList.js",[],"D:\\ANGEL\\git\\wa\\src\\Component\\UserInList.js",["60","61","62","63","64"],"D:\\ANGEL\\git\\wa\\src\\index.js",[],"D:\\ANGEL\\git\\wa\\src\\Component\\CommentList.js",[],"D:\\ANGEL\\git\\wa\\src\\Component\\Menu.js",["65"],"D:\\ANGEL\\git\\wa\\src\\Component\\ProfileHeader.js",["66","67","68"],"D:\\ANGEL\\git\\wa\\src\\Component\\Login.js",["69","70","71"],{"ruleId":"72","severity":1,"message":"73","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":14},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"72","severity":1,"message":"82","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":9},{"ruleId":"72","severity":1,"message":"82","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":9},{"ruleId":"83","severity":1,"message":"84","line":17,"column":13,"nodeType":"85","messageId":"86","endLine":17,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":23,"column":18,"nodeType":"85","messageId":"86","endLine":23,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":29,"column":18,"nodeType":"85","messageId":"86","endLine":29,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":40,"column":18,"nodeType":"85","messageId":"86","endLine":40,"endColumn":20},{"ruleId":"83","severity":1,"message":"87","line":57,"column":21,"nodeType":"85","messageId":"86","endLine":57,"endColumn":23},{"ruleId":"72","severity":1,"message":"88","line":1,"column":15,"nodeType":"74","messageId":"75","endLine":1,"endColumn":24},{"ruleId":"72","severity":1,"message":"88","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"82","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":9},{"ruleId":"89","severity":1,"message":"90","line":49,"column":7,"nodeType":"91","endLine":49,"endColumn":24},{"ruleId":"72","severity":1,"message":"92","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":37,"column":38,"nodeType":"85","messageId":"86","endLine":37,"endColumn":40},{"ruleId":"89","severity":1,"message":"90","line":75,"column":5,"nodeType":"91","endLine":75,"endColumn":44},"no-unused-vars","'Signup' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],["93"],["94"],"'$' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Component' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'css' is defined but never used.","no-global-assign","no-unsafe-negation"]